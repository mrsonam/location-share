{"version":3,"file":"static/js/548.7c434eb3.chunk.js","mappings":"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","sources":["Pages/Signup/Signup.jsx","firebase/firebaseInit.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { TextField, Stack, Typography, Button } from '@mui/material';\r\nimport { firebaseAuth, firebaseDb } from '../../firebase/firebaseInit';\r\nimport { createUserWithEmailAndPassword } from 'firebase/auth';\r\nimport { setDoc, doc } from 'firebase/firestore';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Signup = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  const [emailError, setEmailError] = useState('');\r\n  const [passwordError, setPasswordError] = useState('');\r\n  const [nameError, setNameError] = useState('');\r\n  const [confirmPasswordError, setConfirmPasswordError] = useState('');\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const handleValidation = () => {\r\n    name.trim() === '' ? setNameError('Name is required') : setNameError('');\r\n    email.trim() === ''\r\n      ? setEmailError('Email is required')\r\n      : setEmailError('');\r\n    password.trim() === ''\r\n      ? setPasswordError('Password is required')\r\n      : password.length < 6\r\n      ? setPasswordError('Password must be at least 6 characters')\r\n      : setPasswordError('');\r\n    confirmPassword.trim() === ''\r\n      ? setConfirmPasswordError('Confirm Password is required')\r\n      : password !== confirmPassword\r\n      ? setConfirmPasswordError('Password and Confirm Password must match')\r\n      : setConfirmPasswordError('');\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    handleValidation();\r\n    if (\r\n      emailError === '' &&\r\n      passwordError === '' &&\r\n      nameError === '' &&\r\n      confirmPasswordError === ''\r\n    ) {\r\n      createUserWithEmailAndPassword(firebaseAuth, email, password).then(\r\n        async (user) => {\r\n          try {\r\n            await setDoc(doc(firebaseDb, 'users', `${user.user.uid}`), {\r\n              name: name,\r\n              email: email,\r\n              id: user.user.uid,\r\n            });\r\n            localStorage.setItem('isLoggedIn', true);\r\n            navigate('/');\r\n          } catch (e) {\r\n            console.error('Error adding document: ', e);\r\n          }\r\n        },\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <Stack\r\n          className=\"d_flex justify_content_center align_items_center\"\r\n          spacing={2}\r\n        >\r\n          <Typography variant=\"h3\" component=\"h2\">\r\n            Create an Account\r\n          </Typography>\r\n          <TextField\r\n            id=\"name\"\r\n            label=\"Name\"\r\n            value={name}\r\n            error={nameError !== ''}\r\n            helperText={nameError}\r\n            onChange={(e) => setName(e.target.value)}\r\n            sx={{ width: '400px' }}\r\n          />\r\n          <TextField\r\n            id=\"email\"\r\n            type=\"email\"\r\n            label=\"Email\"\r\n            value={email}\r\n            error={emailError !== ''}\r\n            helperText={emailError}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            sx={{ width: '400px' }}\r\n          />\r\n          <TextField\r\n            id=\"password\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            value={password}\r\n            error={passwordError !== ''}\r\n            helperText={passwordError}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            sx={{ width: '400px' }}\r\n          />\r\n          <TextField\r\n            id=\"confirm-password\"\r\n            type=\"password\"\r\n            label=\"Confirm Password\"\r\n            value={confirmPassword}\r\n            error={confirmPasswordError !== ''}\r\n            helperText={confirmPasswordError}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n            sx={{ width: '400px' }}\r\n          />\r\n          <Button variant=\"contained\" size=\"large\" onClick={handleSubmit}>\r\n            Create\r\n          </Button>\r\n        </Stack>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","import { initializeApp } from 'firebase/app';\r\nimport { getAuth } from 'firebase/auth';\r\nimport { getFirestore } from 'firebase/firestore';\r\n\r\n\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyBpgMmRa0WRIYWqf8sWza-2nbllGFoWM8c',\r\n  authDomain: 'location-share-18909.firebaseapp.com',\r\n  projectId: 'location-share-18909',\r\n  storageBucket: 'location-share-18909.appspot.com',\r\n  messagingSenderId: '998344962375',\r\n  appId: '1:998344962375:web:a270dbfa79855100b6dc62',\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst firebaseAuth = getAuth(app);\r\nconst firebaseDb = getFirestore(app);\r\n\r\nexport {firebaseAuth, firebaseDb};"],"names":["useState","email","setEmail","password","setPassword","name","setName","confirmPassword","setConfirmPassword","emailError","setEmailError","passwordError","setPasswordError","nameError","setNameError","confirmPasswordError","setConfirmPasswordError","navigate","useNavigate","className","spacing","variant","component","id","label","value","error","helperText","onChange","e","target","sx","width","type","size","onClick","trim","length","createUserWithEmailAndPassword","firebaseAuth","then","user","setDoc","doc","firebaseDb","uid","localStorage","setItem","console","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","getAuth","getFirestore"],"sourceRoot":""}